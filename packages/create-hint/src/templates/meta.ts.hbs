import { Category } from '@hint/utils-types';
import { HintScope } from 'hint/dist/src/lib/enums/hint-scope';
import { HintMetadata } from 'hint/dist/src/lib/types';
{{#if packageData.official}}

import { getMessage } from './i18n.import';{{/if}}

const meta: HintMetadata = {
    docs: {
        category: Category.{{hint.category}},{{#if packageData.official}}
        description: getMessage('{{#if packageData.isMulti}}{{toCamelCase hint.normalizedName}}_{{/if}}description', 'en'),
        name: getMessage('{{#if packageData.isMulti}}{{toCamelCase hint.normalizedName}}_{{/if}}name', 'en'){{else}}
        description: `{{hint.description}}`,
        name: `{{hint.normalizedName}}`{{/if}}
    },{{#if packageData.official}}
    /* istanbul ignore next */
    getDescription(language: string) {
        return getMessage('{{#if packageData.isMulti}}{{toCamelCase hint.normalizedName}}_{{/if}}description', language);
    },
    /* istanbul ignore next */
    getName(language: string) {
        return getMessage('{{#if packageData.isMulti}}{{toCamelCase hint.normalizedName}}_{{/if}}name', language);
    },{{else}}
    /* istanbul ignore next */
    getDescription(language: string) {
        return `{{hint.description}}`;
    },
    /* istanbul ignore next */
    getName(language: string) {
        return `{{hint.normalizedName}}`;
    },{{/if}}
    id: '{{#if hint.parentName}}{{hint.parentName}}/{{/if}}{{hint.normalizedName}}',
    schema: [
        /*
         * If you want to allow the user to configure your hint
         * you should use a valid JSON schema. More info in:
         * https://webhint.io/docs/contributor-guide/how-to/hint/#the-meta-property
         */
    ],
    scope: HintScope.{{hint.scope}}
};

export default meta;
